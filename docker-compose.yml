volumes:
  pg_t1:

services:
  t1-db-host:
    image: postgres
    restart: always
    volumes:
      - pg_t1:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=t1
      - POSTGRES_PASSWORD=t1
      - POSTGRES_DB=t1_db
      - PGDATA=/var/lib/postgresql/data
    ports:
      - "5000:5432"
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 5s
      timeout: 10s
      retries: 120

  t1-task1-app:
    restart: always
    build: .
    depends_on:
      t1-db-host:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://t1-db-host:5432/t1_db
      - SPRING_DATASOURCE_USERNAME=t1
      - SPRING_DATASOURCE_PASSWORD=t1

  zookeeper_t1:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper_t1
    container_name: zookeeper_t1
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000

  broker_t1:
      image: confluentinc/cp-kafka:5.5.0
      hostname: broker_t1
      container_name: broker_t1
      depends_on:
        - zookeeper_t1
      ports:
        - "29092:29092"
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper_t1:2182'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_t1:9092
#        ,PLAINTEXT_HOST://broker_t1:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - broker_t1
    ports:
      - "8000:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker_t1:9092